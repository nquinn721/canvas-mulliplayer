steps:
  # Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "gcr.io/$PROJECT_ID/canvas-game:$COMMIT_SHA",
        "-t",
        "gcr.io/$PROJECT_ID/canvas-game:latest",
        ".",
      ]

  # Push the image to Google Container Registry
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/canvas-game:$COMMIT_SHA"]

  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/canvas-game:latest"]

  # Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "deploy",
        "canvas-game",
        "--image=gcr.io/$PROJECT_ID/canvas-game:$COMMIT_SHA",
        "--region=us-east1",
        "--platform=managed",
        "--allow-unauthenticated",
        "--memory=1Gi",
        "--cpu=1",
        "--max-instances=10",
        "--min-instances=0",
        "--concurrency=80",
        "--timeout=3600",
        "--port=3001",
        "--set-env-vars=NODE_ENV=production,DB_HOST=/cloudsql/heroic-footing-460117-k8:us-central1:stocktrader,DB_SOCKET_PATH=/cloudsql/heroic-footing-460117-k8:us-central1:stocktrader,DB_USERNAME=RStockTrader,DB_DATABASE=space_fighters",
        "--set-secrets=DB_PASSWORD=database-password:latest,JWT_SECRET=JWT_SECRET:latest",
        "--add-cloudsql-instances=heroic-footing-460117-k8:us-central1:stocktrader",
        "--revision-suffix=$SHORT_SHA",
      ]

# Store images in Google Container Registry
images:
  - "gcr.io/$PROJECT_ID/canvas-game:$COMMIT_SHA"
  - "gcr.io/$PROJECT_ID/canvas-game:latest"

# Build configuration
options:
  machineType: "E2_HIGHCPU_8"
  diskSizeGb: 100

# Timeout for the entire build
timeout: "1200s"
